// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    ag "github.com/jdcloud-api/jdcloud-sdk-go/services/ag/models"
)

type DescribeScalingActivitiesRequest struct {

    core.JDCloudRequest

    /* 地域  */
    RegionId string `json:"regionId"`

    /* 高可用组 ID  */
    AgId string `json:"agId"`

    /* 页码；默认为1 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 分页大小；默认为20；取值范围[10, 100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* status - 状态，包括成功：SUCCESS,拒绝：REJECTED,失败：FAILED,执行中：RUNNING,部分成功：WARN，精确匹配
beginTime - 开始时间，精确匹配，查询大于等于这个时间的记录
endTime - 结束时间，精确匹配，查询小于等于这个时间的记录
以上每个filter项仅支持单个值查询,如果传多个值仅取第一个值
 (Optional) */
    Filters []ag.Filter `json:"filters"`

    /* 排序条件列表，目前只支持单个排序条件，不支持多个排序条件，默认按照 `startTime` 降序排序
支持使用以下关键字进行排序
- `startTime`: 活动开始时间
 (Optional) */
    Sorts []ag.Sort `json:"sorts"`
}

/*
 * param regionId: 地域 (Required)
 * param agId: 高可用组 ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeScalingActivitiesRequest(
    regionId string,
    agId string,
) *DescribeScalingActivitiesRequest {

	return &DescribeScalingActivitiesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/autoScaling/{agId}:describeScalingActivities",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        AgId: agId,
	}
}

/*
 * param regionId: 地域 (Required)
 * param agId: 高可用组 ID (Required)
 * param pageNumber: 页码；默认为1 (Optional)
 * param pageSize: 分页大小；默认为20；取值范围[10, 100] (Optional)
 * param filters: status - 状态，包括成功：SUCCESS,拒绝：REJECTED,失败：FAILED,执行中：RUNNING,部分成功：WARN，精确匹配
beginTime - 开始时间，精确匹配，查询大于等于这个时间的记录
endTime - 结束时间，精确匹配，查询小于等于这个时间的记录
以上每个filter项仅支持单个值查询,如果传多个值仅取第一个值
 (Optional)
 * param sorts: 排序条件列表，目前只支持单个排序条件，不支持多个排序条件，默认按照 `startTime` 降序排序
支持使用以下关键字进行排序
- `startTime`: 活动开始时间
 (Optional)
 */
func NewDescribeScalingActivitiesRequestWithAllParams(
    regionId string,
    agId string,
    pageNumber *int,
    pageSize *int,
    filters []ag.Filter,
    sorts []ag.Sort,
) *DescribeScalingActivitiesRequest {

    return &DescribeScalingActivitiesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/autoScaling/{agId}:describeScalingActivities",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AgId: agId,
        PageNumber: pageNumber,
        PageSize: pageSize,
        Filters: filters,
        Sorts: sorts,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeScalingActivitiesRequestWithoutParam() *DescribeScalingActivitiesRequest {

    return &DescribeScalingActivitiesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/autoScaling/{agId}:describeScalingActivities",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域(Required) */
func (r *DescribeScalingActivitiesRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param agId: 高可用组 ID(Required) */
func (r *DescribeScalingActivitiesRequest) SetAgId(agId string) {
    r.AgId = agId
}
/* param pageNumber: 页码；默认为1(Optional) */
func (r *DescribeScalingActivitiesRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}
/* param pageSize: 分页大小；默认为20；取值范围[10, 100](Optional) */
func (r *DescribeScalingActivitiesRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}
/* param filters: status - 状态，包括成功：SUCCESS,拒绝：REJECTED,失败：FAILED,执行中：RUNNING,部分成功：WARN，精确匹配
beginTime - 开始时间，精确匹配，查询大于等于这个时间的记录
endTime - 结束时间，精确匹配，查询小于等于这个时间的记录
以上每个filter项仅支持单个值查询,如果传多个值仅取第一个值
(Optional) */
func (r *DescribeScalingActivitiesRequest) SetFilters(filters []ag.Filter) {
    r.Filters = filters
}
/* param sorts: 排序条件列表，目前只支持单个排序条件，不支持多个排序条件，默认按照 `startTime` 降序排序
支持使用以下关键字进行排序
- `startTime`: 活动开始时间
(Optional) */
func (r *DescribeScalingActivitiesRequest) SetSorts(sorts []ag.Sort) {
    r.Sorts = sorts
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeScalingActivitiesRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeScalingActivitiesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeScalingActivitiesResult `json:"result"`
}

type DescribeScalingActivitiesResult struct {
    ScalingActivities []ag.Activity `json:"scalingActivities"`
    TotalCount int `json:"totalCount"`
}