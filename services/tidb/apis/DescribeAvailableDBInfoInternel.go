// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    tidb "github.com/jdcloud-api/jdcloud-sdk-go/services/tidb/models"
)

type DescribeAvailableDBInfoInternelRequest struct {

    core.JDCloudRequest

    /* 地域代码  */
    RegionId string `json:"regionId"`

    /* 用户可用区[多个使用,分隔] (Optional) */
    Azs *string `json:"azs"`
}

/*
 * param regionId: 地域代码 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeAvailableDBInfoInternelRequest(
    regionId string,
) *DescribeAvailableDBInfoInternelRequest {

	return &DescribeAvailableDBInfoInternelRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances:describeAvailableDBInfoInternel",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域代码 (Required)
 * param azs: 用户可用区[多个使用,分隔] (Optional)
 */
func NewDescribeAvailableDBInfoInternelRequestWithAllParams(
    regionId string,
    azs *string,
) *DescribeAvailableDBInfoInternelRequest {

    return &DescribeAvailableDBInfoInternelRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances:describeAvailableDBInfoInternel",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Azs: azs,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeAvailableDBInfoInternelRequestWithoutParam() *DescribeAvailableDBInfoInternelRequest {

    return &DescribeAvailableDBInfoInternelRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances:describeAvailableDBInfoInternel",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域代码(Required) */
func (r *DescribeAvailableDBInfoInternelRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param azs: 用户可用区[多个使用,分隔](Optional) */
func (r *DescribeAvailableDBInfoInternelRequest) SetAzs(azs string) {
    r.Azs = &azs
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeAvailableDBInfoInternelRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeAvailableDBInfoInternelResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeAvailableDBInfoInternelResult `json:"result"`
}

type DescribeAvailableDBInfoInternelResult struct {
    EngineVersion []string `json:"engineVersion"`
    ArchitectureType []string `json:"architectureType"`
    ArchitectureVersion []tidb.ArchitectureVersion `json:"architectureVersion"`
}