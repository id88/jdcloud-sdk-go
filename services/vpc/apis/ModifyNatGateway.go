// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type ModifyNatGatewayRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* natGateway ID  */
    NatGatewayId string `json:"natGatewayId"`

    /* NAT网关名称 (Optional) */
    NatGatewayName *string `json:"natGatewayName"`

    /* 描述,允许输入UTF-8编码下的全部字符，不超过256字符 (Optional) */
    Description *string `json:"description"`

    /* NAT网关规格，取值small（100万并发连接数）,medium(300万并发连接数),large（1000万并发连接数） (Optional) */
    NatGatewaySpec *string `json:"natGatewaySpec"`
}

/*
 * param regionId: Region ID (Required)
 * param natGatewayId: natGateway ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModifyNatGatewayRequest(
    regionId string,
    natGatewayId string,
) *ModifyNatGatewayRequest {

	return &ModifyNatGatewayRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/natGateways/{natGatewayId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        NatGatewayId: natGatewayId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param natGatewayId: natGateway ID (Required)
 * param natGatewayName: NAT网关名称 (Optional)
 * param description: 描述,允许输入UTF-8编码下的全部字符，不超过256字符 (Optional)
 * param natGatewaySpec: NAT网关规格，取值small（100万并发连接数）,medium(300万并发连接数),large（1000万并发连接数） (Optional)
 */
func NewModifyNatGatewayRequestWithAllParams(
    regionId string,
    natGatewayId string,
    natGatewayName *string,
    description *string,
    natGatewaySpec *string,
) *ModifyNatGatewayRequest {

    return &ModifyNatGatewayRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/natGateways/{natGatewayId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        NatGatewayId: natGatewayId,
        NatGatewayName: natGatewayName,
        Description: description,
        NatGatewaySpec: natGatewaySpec,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModifyNatGatewayRequestWithoutParam() *ModifyNatGatewayRequest {

    return &ModifyNatGatewayRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/natGateways/{natGatewayId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *ModifyNatGatewayRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param natGatewayId: natGateway ID(Required) */
func (r *ModifyNatGatewayRequest) SetNatGatewayId(natGatewayId string) {
    r.NatGatewayId = natGatewayId
}
/* param natGatewayName: NAT网关名称(Optional) */
func (r *ModifyNatGatewayRequest) SetNatGatewayName(natGatewayName string) {
    r.NatGatewayName = &natGatewayName
}
/* param description: 描述,允许输入UTF-8编码下的全部字符，不超过256字符(Optional) */
func (r *ModifyNatGatewayRequest) SetDescription(description string) {
    r.Description = &description
}
/* param natGatewaySpec: NAT网关规格，取值small（100万并发连接数）,medium(300万并发连接数),large（1000万并发连接数）(Optional) */
func (r *ModifyNatGatewayRequest) SetNatGatewaySpec(natGatewaySpec string) {
    r.NatGatewaySpec = &natGatewaySpec
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModifyNatGatewayRequest) GetRegionId() string {
    return r.RegionId
}

type ModifyNatGatewayResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModifyNatGatewayResult `json:"result"`
}

type ModifyNatGatewayResult struct {
}