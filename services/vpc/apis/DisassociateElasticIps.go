// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    vpc "github.com/jdcloud-api/jdcloud-sdk-go/services/vpc/models"
)

type DisassociateElasticIpsRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* natGateway ID  */
    NatGatewayId string `json:"natGatewayId"`

    /* 公网IP ID，当为弹性公网IP时，为elasticIpId。  */
    ElasticIpIds []string `json:"elasticIpIds"`

    /* 解绑后是否删除公网IP，取值范围：true、false,默认为false.true表示解绑公网IP时删除该公网IP;false表示解绑公网IP时不删除公网IP (Optional) */
    DeleteElasticIp *bool `json:"deleteElasticIp"`
}

/*
 * param regionId: Region ID (Required)
 * param natGatewayId: natGateway ID (Required)
 * param elasticIpIds: 公网IP ID，当为弹性公网IP时，为elasticIpId。 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDisassociateElasticIpsRequest(
    regionId string,
    natGatewayId string,
    elasticIpIds []string,
) *DisassociateElasticIpsRequest {

	return &DisassociateElasticIpsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/natGateways/{natGatewayId}:disassociateElasticIps",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        NatGatewayId: natGatewayId,
        ElasticIpIds: elasticIpIds,
	}
}

/*
 * param regionId: Region ID (Required)
 * param natGatewayId: natGateway ID (Required)
 * param elasticIpIds: 公网IP ID，当为弹性公网IP时，为elasticIpId。 (Required)
 * param deleteElasticIp: 解绑后是否删除公网IP，取值范围：true、false,默认为false.true表示解绑公网IP时删除该公网IP;false表示解绑公网IP时不删除公网IP (Optional)
 */
func NewDisassociateElasticIpsRequestWithAllParams(
    regionId string,
    natGatewayId string,
    elasticIpIds []string,
    deleteElasticIp *bool,
) *DisassociateElasticIpsRequest {

    return &DisassociateElasticIpsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/natGateways/{natGatewayId}:disassociateElasticIps",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        NatGatewayId: natGatewayId,
        ElasticIpIds: elasticIpIds,
        DeleteElasticIp: deleteElasticIp,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDisassociateElasticIpsRequestWithoutParam() *DisassociateElasticIpsRequest {

    return &DisassociateElasticIpsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/natGateways/{natGatewayId}:disassociateElasticIps",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *DisassociateElasticIpsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param natGatewayId: natGateway ID(Required) */
func (r *DisassociateElasticIpsRequest) SetNatGatewayId(natGatewayId string) {
    r.NatGatewayId = natGatewayId
}
/* param elasticIpIds: 公网IP ID，当为弹性公网IP时，为elasticIpId。(Required) */
func (r *DisassociateElasticIpsRequest) SetElasticIpIds(elasticIpIds []string) {
    r.ElasticIpIds = elasticIpIds
}
/* param deleteElasticIp: 解绑后是否删除公网IP，取值范围：true、false,默认为false.true表示解绑公网IP时删除该公网IP;false表示解绑公网IP时不删除公网IP(Optional) */
func (r *DisassociateElasticIpsRequest) SetDeleteElasticIp(deleteElasticIp bool) {
    r.DeleteElasticIp = &deleteElasticIp
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DisassociateElasticIpsRequest) GetRegionId() string {
    return r.RegionId
}

type DisassociateElasticIpsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DisassociateElasticIpsResult `json:"result"`
}

type DisassociateElasticIpsResult struct {
    FailedList []vpc.FailedIp `json:"failedList"`
}