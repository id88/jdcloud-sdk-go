// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type ModifyVpcPolicyRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* policy ID  */
    VpcPolicyId string `json:"vpcPolicyId"`

    /* VpcPolicy的名称,不为空(有变更再传)。取值范围：1-32个中文、英文大小写的字母、数字和下划线分隔符 (Optional) */
    VpcPolicyName *string `json:"vpcPolicyName"`

    /* 具体策略内容(格式参考样例) (Optional) */
    PolicyDocument *string `json:"policyDocument"`
}

/*
 * param regionId: Region ID (Required)
 * param vpcPolicyId: policy ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModifyVpcPolicyRequest(
    regionId string,
    vpcPolicyId string,
) *ModifyVpcPolicyRequest {

	return &ModifyVpcPolicyRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/vpcPolicy/{vpcPolicyId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        VpcPolicyId: vpcPolicyId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param vpcPolicyId: policy ID (Required)
 * param vpcPolicyName: VpcPolicy的名称,不为空(有变更再传)。取值范围：1-32个中文、英文大小写的字母、数字和下划线分隔符 (Optional)
 * param policyDocument: 具体策略内容(格式参考样例) (Optional)
 */
func NewModifyVpcPolicyRequestWithAllParams(
    regionId string,
    vpcPolicyId string,
    vpcPolicyName *string,
    policyDocument *string,
) *ModifyVpcPolicyRequest {

    return &ModifyVpcPolicyRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/vpcPolicy/{vpcPolicyId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        VpcPolicyId: vpcPolicyId,
        VpcPolicyName: vpcPolicyName,
        PolicyDocument: policyDocument,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModifyVpcPolicyRequestWithoutParam() *ModifyVpcPolicyRequest {

    return &ModifyVpcPolicyRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/vpcPolicy/{vpcPolicyId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *ModifyVpcPolicyRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param vpcPolicyId: policy ID(Required) */
func (r *ModifyVpcPolicyRequest) SetVpcPolicyId(vpcPolicyId string) {
    r.VpcPolicyId = vpcPolicyId
}
/* param vpcPolicyName: VpcPolicy的名称,不为空(有变更再传)。取值范围：1-32个中文、英文大小写的字母、数字和下划线分隔符(Optional) */
func (r *ModifyVpcPolicyRequest) SetVpcPolicyName(vpcPolicyName string) {
    r.VpcPolicyName = &vpcPolicyName
}
/* param policyDocument: 具体策略内容(格式参考样例)(Optional) */
func (r *ModifyVpcPolicyRequest) SetPolicyDocument(policyDocument string) {
    r.PolicyDocument = &policyDocument
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModifyVpcPolicyRequest) GetRegionId() string {
    return r.RegionId
}

type ModifyVpcPolicyResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModifyVpcPolicyResult `json:"result"`
}

type ModifyVpcPolicyResult struct {
}