// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    starshield "github.com/jdcloud-api/jdcloud-sdk-go/services/starshield/models"
)

type InstanceBandwidthP95Request struct {

    core.JDCloudRequest

    /* 实例标识  */
    InstanceId string `json:"instanceId"`

    /* all - 所有
normal - 业务
mitigation - 缓解
cache - 缓存
origin - 回源
  */
    QueryMode string `json:"queryMode"`

    /* 查询开始时间  */
    Since string `json:"since"`

    /* 查询结束时间  */
    Until string `json:"until"`
}

/*
 * param instanceId: 实例标识 (Required)
 * param queryMode: all - 所有
normal - 业务
mitigation - 缓解
cache - 缓存
origin - 回源
 (Required)
 * param since: 查询开始时间 (Required)
 * param until: 查询结束时间 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewInstanceBandwidthP95Request(
    instanceId string,
    queryMode string,
    since string,
    until string,
) *InstanceBandwidthP95Request {

	return &InstanceBandwidthP95Request{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/instances/{instanceId}/instanceBandwidthP95",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        InstanceId: instanceId,
        QueryMode: queryMode,
        Since: since,
        Until: until,
	}
}

/*
 * param instanceId: 实例标识 (Required)
 * param queryMode: all - 所有
normal - 业务
mitigation - 缓解
cache - 缓存
origin - 回源
 (Required)
 * param since: 查询开始时间 (Required)
 * param until: 查询结束时间 (Required)
 */
func NewInstanceBandwidthP95RequestWithAllParams(
    instanceId string,
    queryMode string,
    since string,
    until string,
) *InstanceBandwidthP95Request {

    return &InstanceBandwidthP95Request{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/instances/{instanceId}/instanceBandwidthP95",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        InstanceId: instanceId,
        QueryMode: queryMode,
        Since: since,
        Until: until,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewInstanceBandwidthP95RequestWithoutParam() *InstanceBandwidthP95Request {

    return &InstanceBandwidthP95Request{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/instances/{instanceId}/instanceBandwidthP95",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param instanceId: 实例标识(Required) */
func (r *InstanceBandwidthP95Request) SetInstanceId(instanceId string) {
    r.InstanceId = instanceId
}
/* param queryMode: all - 所有
normal - 业务
mitigation - 缓解
cache - 缓存
origin - 回源
(Required) */
func (r *InstanceBandwidthP95Request) SetQueryMode(queryMode string) {
    r.QueryMode = queryMode
}
/* param since: 查询开始时间(Required) */
func (r *InstanceBandwidthP95Request) SetSince(since string) {
    r.Since = since
}
/* param until: 查询结束时间(Required) */
func (r *InstanceBandwidthP95Request) SetUntil(until string) {
    r.Until = until
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r InstanceBandwidthP95Request) GetRegionId() string {
    return ""
}

type InstanceBandwidthP95Response struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result InstanceBandwidthP95Result `json:"result"`
}

type InstanceBandwidthP95Result struct {
    Data starshield.CdnSingleMetric `json:"data"`
}