// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package models


type Data struct {

    /* Size of location in meters (Optional) */
    Size int `json:"size"`

    /* Altitude of location in meters (Optional) */
    Altitude int `json:"altitude"`

    /* Degrees of longitude (Optional) */
    Long_degrees int `json:"long_degrees"`

    /* Degrees of latitude (Optional) */
    Lat_degrees int `json:"lat_degrees"`

    /* Horizontal precision of location (Optional) */
    Precision_horz int `json:"precision_horz"`

    /* Vertical precision of location (Optional) */
    Precision_vert int `json:"precision_vert"`

    /* Longitude direction (Optional) */
    Long_direction string `json:"long_direction"`

    /* Minutes of longitude (Optional) */
    Long_minutes int `json:"long_minutes"`

    /* Seconds of longitude (Optional) */
    Long_seconds int `json:"long_seconds"`

    /* Latitude direction (Optional) */
    Lat_direction string `json:"lat_direction"`

    /* Minutes of latitude (Optional) */
    Lat_minutes int `json:"lat_minutes"`

    /* Seconds of latitude (Optional) */
    Lat_seconds int `json:"lat_seconds"`

    /* A service type, prefixed with an underscore (Optional) */
    Service string `json:"service"`

    /* A valid protocol (Optional) */
    Proto string `json:"proto"`

    /* A valid hostname (Optional) */
    Name string `json:"name"`

    /* Used with some records like MX and SRV to determine priority. If you do not supply a priority for an MX record, a default value of 0 will be set (Optional) */
    Priority int `json:"priority"`

    /* The record weight (Optional) */
    Weight int `json:"weight"`

    /* The port of the service (Optional) */
    Port int `json:"port"`

    /* A valid hostname (Optional) */
    Target string `json:"target"`

    /* Type (Optional) */
    Ty_pe int `json:"ty_pe"`

    /* Key Tag (Optional) */
    Key_tag int `json:"key_tag"`

    /* Algorithm (Optional) */
    Algorithm int `json:"algorithm"`

    /* Certificate (Optional) */
    Certificate string `json:"certificate"`

    /* Flags (Optional) */
    Flags int `json:"flags"`

    /* Protocol (Optional) */
    Protocol int `json:"protocol"`

    /* Public Key (Optional) */
    Public_key string `json:"public_key"`

    /* Digest Type (Optional) */
    Digest_type int `json:"digest_type"`

    /* Digest (Optional) */
    Digest string `json:"digest"`

    /* Order (Optional) */
    Order int `json:"order"`

    /* Preference (Optional) */
    Preference int `json:"preference"`

    /* Regex (Optional) */
    Regex string `json:"regex"`

    /* Replacement (Optional) */
    Replacement string `json:"replacement"`

    /* Usage (Optional) */
    Usage int `json:"usage"`

    /* Selector (Optional) */
    Selector int `json:"selector"`

    /* Matching Type (Optional) */
    Matching_type int `json:"matching_type"`

    /* fingerprint (Optional) */
    Fingerprint string `json:"fingerprint"`

    /* The record content (Optional) */
    Content string `json:"content"`
}
