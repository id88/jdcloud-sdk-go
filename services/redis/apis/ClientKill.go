// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type ClientKillRequest struct {

    core.JDCloudRequest

    /* 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2  */
    RegionId string `json:"regionId"`

    /* 缓存Redis实例ID，是访问实例的唯一标识  */
    CacheInstanceId string `json:"cacheInstanceId"`

    /* 关闭属性, 支持addr/type/db三种属性
addr - 根据客户端地址关闭连接
type - 根据链接类型关闭连接
db - 根据db关闭连接
  */
    Option string `json:"option"`

    /* 筛选条件
属性是addr时 - ip:port, port空表示此ip所有port
属性是type时 - 支持normal/pubsub/all三种条件
属性是db时 - db列表, 0,1,2..
  */
    Value string `json:"value"`
}

/*
 * param regionId: 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2 (Required)
 * param cacheInstanceId: 缓存Redis实例ID，是访问实例的唯一标识 (Required)
 * param option: 关闭属性, 支持addr/type/db三种属性
addr - 根据客户端地址关闭连接
type - 根据链接类型关闭连接
db - 根据db关闭连接
 (Required)
 * param value: 筛选条件
属性是addr时 - ip:port, port空表示此ip所有port
属性是type时 - 支持normal/pubsub/all三种条件
属性是db时 - db列表, 0,1,2..
 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewClientKillRequest(
    regionId string,
    cacheInstanceId string,
    option string,
    value string,
) *ClientKillRequest {

	return &ClientKillRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/cacheInstance/{cacheInstanceId}/clientKill",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        CacheInstanceId: cacheInstanceId,
        Option: option,
        Value: value,
	}
}

/*
 * param regionId: 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2 (Required)
 * param cacheInstanceId: 缓存Redis实例ID，是访问实例的唯一标识 (Required)
 * param option: 关闭属性, 支持addr/type/db三种属性
addr - 根据客户端地址关闭连接
type - 根据链接类型关闭连接
db - 根据db关闭连接
 (Required)
 * param value: 筛选条件
属性是addr时 - ip:port, port空表示此ip所有port
属性是type时 - 支持normal/pubsub/all三种条件
属性是db时 - db列表, 0,1,2..
 (Required)
 */
func NewClientKillRequestWithAllParams(
    regionId string,
    cacheInstanceId string,
    option string,
    value string,
) *ClientKillRequest {

    return &ClientKillRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/cacheInstance/{cacheInstanceId}/clientKill",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        CacheInstanceId: cacheInstanceId,
        Option: option,
        Value: value,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewClientKillRequestWithoutParam() *ClientKillRequest {

    return &ClientKillRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/cacheInstance/{cacheInstanceId}/clientKill",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2(Required) */
func (r *ClientKillRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param cacheInstanceId: 缓存Redis实例ID，是访问实例的唯一标识(Required) */
func (r *ClientKillRequest) SetCacheInstanceId(cacheInstanceId string) {
    r.CacheInstanceId = cacheInstanceId
}
/* param option: 关闭属性, 支持addr/type/db三种属性
addr - 根据客户端地址关闭连接
type - 根据链接类型关闭连接
db - 根据db关闭连接
(Required) */
func (r *ClientKillRequest) SetOption(option string) {
    r.Option = option
}
/* param value: 筛选条件
属性是addr时 - ip:port, port空表示此ip所有port
属性是type时 - 支持normal/pubsub/all三种条件
属性是db时 - db列表, 0,1,2..
(Required) */
func (r *ClientKillRequest) SetValue(value string) {
    r.Value = value
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ClientKillRequest) GetRegionId() string {
    return r.RegionId
}

type ClientKillResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ClientKillResult `json:"result"`
}

type ClientKillResult struct {
}