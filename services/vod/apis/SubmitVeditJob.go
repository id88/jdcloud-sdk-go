// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    vod "github.com/jdcloud-api/jdcloud-sdk-go/services/vod/models"
)

type SubmitVeditJobRequest struct {

    core.JDCloudRequest

    /* 工程ID (Optional) */
    ProjectId *int64 `json:"projectId"`

    /* 合成媒资元数据 (Optional) */
    MediaMetadata *vod.MediaMetadata `json:"mediaMetadata"`

    /* 用户数据，JSON格式字符串 (Optional) */
    UserData *string `json:"userData"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSubmitVeditJobRequest(
) *SubmitVeditJobRequest {

	return &SubmitVeditJobRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/veditJobs:submit",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param projectId: 工程ID (Optional)
 * param mediaMetadata: 合成媒资元数据 (Optional)
 * param userData: 用户数据，JSON格式字符串 (Optional)
 */
func NewSubmitVeditJobRequestWithAllParams(
    projectId *int64,
    mediaMetadata *vod.MediaMetadata,
    userData *string,
) *SubmitVeditJobRequest {

    return &SubmitVeditJobRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/veditJobs:submit",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        ProjectId: projectId,
        MediaMetadata: mediaMetadata,
        UserData: userData,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSubmitVeditJobRequestWithoutParam() *SubmitVeditJobRequest {

    return &SubmitVeditJobRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/veditJobs:submit",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param projectId: 工程ID(Optional) */
func (r *SubmitVeditJobRequest) SetProjectId(projectId int64) {
    r.ProjectId = &projectId
}

/* param mediaMetadata: 合成媒资元数据(Optional) */
func (r *SubmitVeditJobRequest) SetMediaMetadata(mediaMetadata *vod.MediaMetadata) {
    r.MediaMetadata = mediaMetadata
}

/* param userData: 用户数据，JSON格式字符串(Optional) */
func (r *SubmitVeditJobRequest) SetUserData(userData string) {
    r.UserData = &userData
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SubmitVeditJobRequest) GetRegionId() string {
    return ""
}

type SubmitVeditJobResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SubmitVeditJobResult `json:"result"`
}

type SubmitVeditJobResult struct {
    JobId int64 `json:"jobId"`
    ProjectId int64 `json:"projectId"`
}