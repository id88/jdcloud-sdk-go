// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type UpdateSnapshotTemplateRequest struct {

    core.JDCloudRequest

    /* 模板ID  */
    TemplateId int `json:"templateId"`

    /* 模板名称 (Optional) */
    TemplateName *string `json:"templateName"`

    /* 模板配置，JSON格式的字符串 (Optional) */
    TemplateConfig *string `json:"templateConfig"`
}

/*
 * param templateId: 模板ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateSnapshotTemplateRequest(
    templateId int,
) *UpdateSnapshotTemplateRequest {

	return &UpdateSnapshotTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/snapshotTemplates/{templateId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        TemplateId: templateId,
	}
}

/*
 * param templateId: 模板ID (Required)
 * param templateName: 模板名称 (Optional)
 * param templateConfig: 模板配置，JSON格式的字符串 (Optional)
 */
func NewUpdateSnapshotTemplateRequestWithAllParams(
    templateId int,
    templateName *string,
    templateConfig *string,
) *UpdateSnapshotTemplateRequest {

    return &UpdateSnapshotTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/snapshotTemplates/{templateId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        TemplateId: templateId,
        TemplateName: templateName,
        TemplateConfig: templateConfig,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateSnapshotTemplateRequestWithoutParam() *UpdateSnapshotTemplateRequest {

    return &UpdateSnapshotTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/snapshotTemplates/{templateId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param templateId: 模板ID(Required) */
func (r *UpdateSnapshotTemplateRequest) SetTemplateId(templateId int) {
    r.TemplateId = templateId
}

/* param templateName: 模板名称(Optional) */
func (r *UpdateSnapshotTemplateRequest) SetTemplateName(templateName string) {
    r.TemplateName = &templateName
}

/* param templateConfig: 模板配置，JSON格式的字符串(Optional) */
func (r *UpdateSnapshotTemplateRequest) SetTemplateConfig(templateConfig string) {
    r.TemplateConfig = &templateConfig
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateSnapshotTemplateRequest) GetRegionId() string {
    return ""
}

type UpdateSnapshotTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateSnapshotTemplateResult `json:"result"`
}

type UpdateSnapshotTemplateResult struct {
    TemplateId string `json:"templateId"`
    TemplateName string `json:"templateName"`
    TemplateType string `json:"templateType"`
    TemplateConfig string `json:"templateConfig"`
    CreateTime string `json:"createTime"`
    UpdateTime string `json:"updateTime"`
}