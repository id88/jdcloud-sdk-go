// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type CreateSnapshotTemplateRequest struct {

    core.JDCloudRequest

    /* 模板名称  */
    TemplateName string `json:"templateName"`

    /* 模板类型。取值范围：
  sample - 采样截图模板
  sprite - 雪碧图模板
  */
    TemplateType string `json:"templateType"`

    /* 模板配置，JSON格式的字符串
若 templateType 取值 sample，则JSON字符串须符合 SnapshotTemplateSampleConfigInfo 格式
若 templateType 取值 sprite，则JSON字符串须符合 SnapshotTemplateSpriteConfigInfo 格式
  */
    TemplateConfig string `json:"templateConfig"`
}

/*
 * param templateName: 模板名称 (Required)
 * param templateType: 模板类型。取值范围：
  sample - 采样截图模板
  sprite - 雪碧图模板
 (Required)
 * param templateConfig: 模板配置，JSON格式的字符串
若 templateType 取值 sample，则JSON字符串须符合 SnapshotTemplateSampleConfigInfo 格式
若 templateType 取值 sprite，则JSON字符串须符合 SnapshotTemplateSpriteConfigInfo 格式
 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateSnapshotTemplateRequest(
    templateName string,
    templateType string,
    templateConfig string,
) *CreateSnapshotTemplateRequest {

	return &CreateSnapshotTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/snapshotTemplates",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        TemplateName: templateName,
        TemplateType: templateType,
        TemplateConfig: templateConfig,
	}
}

/*
 * param templateName: 模板名称 (Required)
 * param templateType: 模板类型。取值范围：
  sample - 采样截图模板
  sprite - 雪碧图模板
 (Required)
 * param templateConfig: 模板配置，JSON格式的字符串
若 templateType 取值 sample，则JSON字符串须符合 SnapshotTemplateSampleConfigInfo 格式
若 templateType 取值 sprite，则JSON字符串须符合 SnapshotTemplateSpriteConfigInfo 格式
 (Required)
 */
func NewCreateSnapshotTemplateRequestWithAllParams(
    templateName string,
    templateType string,
    templateConfig string,
) *CreateSnapshotTemplateRequest {

    return &CreateSnapshotTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/snapshotTemplates",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        TemplateName: templateName,
        TemplateType: templateType,
        TemplateConfig: templateConfig,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateSnapshotTemplateRequestWithoutParam() *CreateSnapshotTemplateRequest {

    return &CreateSnapshotTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/snapshotTemplates",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param templateName: 模板名称(Required) */
func (r *CreateSnapshotTemplateRequest) SetTemplateName(templateName string) {
    r.TemplateName = templateName
}

/* param templateType: 模板类型。取值范围：
  sample - 采样截图模板
  sprite - 雪碧图模板
(Required) */
func (r *CreateSnapshotTemplateRequest) SetTemplateType(templateType string) {
    r.TemplateType = templateType
}

/* param templateConfig: 模板配置，JSON格式的字符串
若 templateType 取值 sample，则JSON字符串须符合 SnapshotTemplateSampleConfigInfo 格式
若 templateType 取值 sprite，则JSON字符串须符合 SnapshotTemplateSpriteConfigInfo 格式
(Required) */
func (r *CreateSnapshotTemplateRequest) SetTemplateConfig(templateConfig string) {
    r.TemplateConfig = templateConfig
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateSnapshotTemplateRequest) GetRegionId() string {
    return ""
}

type CreateSnapshotTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateSnapshotTemplateResult `json:"result"`
}

type CreateSnapshotTemplateResult struct {
    TemplateId string `json:"templateId"`
    TemplateName string `json:"templateName"`
    TemplateType string `json:"templateType"`
    TemplateConfig string `json:"templateConfig"`
    CreateTime string `json:"createTime"`
    UpdateTime string `json:"updateTime"`
}