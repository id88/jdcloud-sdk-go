// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    rms "github.com/jdcloud-api/jdcloud-sdk-go/services/rms/models"
)

type AddTemplateRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 应用ID  */
    AppId string `json:"appId"`

    /* 资质ID  */
    AptitudesId string `json:"aptitudesId"`

    /* 短信主题  */
    Title string `json:"title"`

    /* 短信描述  */
    Description string `json:"description"`

    /* 短信签名  */
    SignContent string `json:"signContent"`

    /* 短信内容  */
    Content []rms.TemplateContent `json:"content"`
}

/*
 * param regionId: Region ID (Required)
 * param appId: 应用ID (Required)
 * param aptitudesId: 资质ID (Required)
 * param title: 短信主题 (Required)
 * param description: 短信描述 (Required)
 * param signContent: 短信签名 (Required)
 * param content: 短信内容 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAddTemplateRequest(
    regionId string,
    appId string,
    aptitudesId string,
    title string,
    description string,
    signContent string,
    content []rms.TemplateContent,
) *AddTemplateRequest {

	return &AddTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/addTemplate",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppId: appId,
        AptitudesId: aptitudesId,
        Title: title,
        Description: description,
        SignContent: signContent,
        Content: content,
	}
}

/*
 * param regionId: Region ID (Required)
 * param appId: 应用ID (Required)
 * param aptitudesId: 资质ID (Required)
 * param title: 短信主题 (Required)
 * param description: 短信描述 (Required)
 * param signContent: 短信签名 (Required)
 * param content: 短信内容 (Required)
 */
func NewAddTemplateRequestWithAllParams(
    regionId string,
    appId string,
    aptitudesId string,
    title string,
    description string,
    signContent string,
    content []rms.TemplateContent,
) *AddTemplateRequest {

    return &AddTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/addTemplate",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppId: appId,
        AptitudesId: aptitudesId,
        Title: title,
        Description: description,
        SignContent: signContent,
        Content: content,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAddTemplateRequestWithoutParam() *AddTemplateRequest {

    return &AddTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/addTemplate",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *AddTemplateRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param appId: 应用ID(Required) */
func (r *AddTemplateRequest) SetAppId(appId string) {
    r.AppId = appId
}

/* param aptitudesId: 资质ID(Required) */
func (r *AddTemplateRequest) SetAptitudesId(aptitudesId string) {
    r.AptitudesId = aptitudesId
}

/* param title: 短信主题(Required) */
func (r *AddTemplateRequest) SetTitle(title string) {
    r.Title = title
}

/* param description: 短信描述(Required) */
func (r *AddTemplateRequest) SetDescription(description string) {
    r.Description = description
}

/* param signContent: 短信签名(Required) */
func (r *AddTemplateRequest) SetSignContent(signContent string) {
    r.SignContent = signContent
}

/* param content: 短信内容(Required) */
func (r *AddTemplateRequest) SetContent(content []rms.TemplateContent) {
    r.Content = content
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AddTemplateRequest) GetRegionId() string {
    return r.RegionId
}

type AddTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AddTemplateResult `json:"result"`
}

type AddTemplateResult struct {
    Data rms.RespTemplateData `json:"data"`
    Status bool `json:"status"`
    Code string `json:"code"`
    Message string `json:"message"`
}