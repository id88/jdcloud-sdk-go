// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    common "github.com/jdcloud-api/jdcloud-sdk-go/services/common/models"
    lb "github.com/jdcloud-api/jdcloud-sdk-go/services/lb/models"
)

type ExportLoadBalancersRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 导出文件类型, 目前支持excel和csv (Optional) */
    FileType *string `json:"fileType"`

    /* 开始页码, 默认为1, 取值范围：[1,∞), startPage超过总页数时会报错 (Optional) */
    StartPage *int `json:"startPage"`

    /* 结束页码, 取值范围：[startPage,∞), 当startPage未超过总页数, endpage超过总页数, 会返回从开始页码到最后一页的内容 (Optional) */
    EndPage *int `json:"endPage"`

    /* 分页大小，默认为20，取值范围：[10,100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* loadBalancerType - 负载均衡类型，取值为：alb、nlb、dnlb，默认alb，支持单个
loadBalancerIds - 负载均衡ID列表，支持多个
loadBalancerNames - 负载均衡名称列表，支持多个
vpcId - 负载均衡所在Vpc的Id，支持单个
azType - 负载均衡az类型，取值：all(全部类型)，standard(标准负载均衡)，edge(边缘负载均衡)，默认standard ，支持单个
azs - 可用区，支持多个
columns - 不指定则默认导出基本表头："LB ID", "LB Name", "LB Type", "Region"
  可选字段值：
    az：lb所属可用区，对应表头"Availability Zone"
    privateIpAddress：lb的vip地址，对应表头"VIP"
    elasticIp：lb的公网IP，对应表头"EIP IPv4 Address"、"EIP IPv4 Bandwidth"
    ipv6Address：lb的ipv6地址，对应表头"IPv6 Address"
    vpc/subnet：lb所属的vpc及子网，对应表头"VPC ID"、"VPC Name"、"Subnet ID"、"Subnet Name"
    deleteProtection：是否开启删除保护，对应表头"Delete Protection"
    charge：lb的计费信息，对应表头"LB Billing Type"、"Creation Time"
    state：lb状态，对应表头"Status"
    tag：lb绑定的标签，对应表头"Tag"
    description：lb的描述信息，对应表头"Description"
 (Optional) */
    Filters []common.Filter `json:"filters"`

    /* Tag筛选条件 (Optional) */
    Tags []lb.TagFilter `json:"tags"`
}

/*
 * param regionId: Region ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewExportLoadBalancersRequest(
    regionId string,
) *ExportLoadBalancersRequest {

	return &ExportLoadBalancersRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/loadBalancers:export",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param fileType: 导出文件类型, 目前支持excel和csv (Optional)
 * param startPage: 开始页码, 默认为1, 取值范围：[1,∞), startPage超过总页数时会报错 (Optional)
 * param endPage: 结束页码, 取值范围：[startPage,∞), 当startPage未超过总页数, endpage超过总页数, 会返回从开始页码到最后一页的内容 (Optional)
 * param pageSize: 分页大小，默认为20，取值范围：[10,100] (Optional)
 * param filters: loadBalancerType - 负载均衡类型，取值为：alb、nlb、dnlb，默认alb，支持单个
loadBalancerIds - 负载均衡ID列表，支持多个
loadBalancerNames - 负载均衡名称列表，支持多个
vpcId - 负载均衡所在Vpc的Id，支持单个
azType - 负载均衡az类型，取值：all(全部类型)，standard(标准负载均衡)，edge(边缘负载均衡)，默认standard ，支持单个
azs - 可用区，支持多个
columns - 不指定则默认导出基本表头："LB ID", "LB Name", "LB Type", "Region"
  可选字段值：
    az：lb所属可用区，对应表头"Availability Zone"
    privateIpAddress：lb的vip地址，对应表头"VIP"
    elasticIp：lb的公网IP，对应表头"EIP IPv4 Address"、"EIP IPv4 Bandwidth"
    ipv6Address：lb的ipv6地址，对应表头"IPv6 Address"
    vpc/subnet：lb所属的vpc及子网，对应表头"VPC ID"、"VPC Name"、"Subnet ID"、"Subnet Name"
    deleteProtection：是否开启删除保护，对应表头"Delete Protection"
    charge：lb的计费信息，对应表头"LB Billing Type"、"Creation Time"
    state：lb状态，对应表头"Status"
    tag：lb绑定的标签，对应表头"Tag"
    description：lb的描述信息，对应表头"Description"
 (Optional)
 * param tags: Tag筛选条件 (Optional)
 */
func NewExportLoadBalancersRequestWithAllParams(
    regionId string,
    fileType *string,
    startPage *int,
    endPage *int,
    pageSize *int,
    filters []common.Filter,
    tags []lb.TagFilter,
) *ExportLoadBalancersRequest {

    return &ExportLoadBalancersRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/loadBalancers:export",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        FileType: fileType,
        StartPage: startPage,
        EndPage: endPage,
        PageSize: pageSize,
        Filters: filters,
        Tags: tags,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewExportLoadBalancersRequestWithoutParam() *ExportLoadBalancersRequest {

    return &ExportLoadBalancersRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/loadBalancers:export",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *ExportLoadBalancersRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param fileType: 导出文件类型, 目前支持excel和csv(Optional) */
func (r *ExportLoadBalancersRequest) SetFileType(fileType string) {
    r.FileType = &fileType
}

/* param startPage: 开始页码, 默认为1, 取值范围：[1,∞), startPage超过总页数时会报错(Optional) */
func (r *ExportLoadBalancersRequest) SetStartPage(startPage int) {
    r.StartPage = &startPage
}

/* param endPage: 结束页码, 取值范围：[startPage,∞), 当startPage未超过总页数, endpage超过总页数, 会返回从开始页码到最后一页的内容(Optional) */
func (r *ExportLoadBalancersRequest) SetEndPage(endPage int) {
    r.EndPage = &endPage
}

/* param pageSize: 分页大小，默认为20，取值范围：[10,100](Optional) */
func (r *ExportLoadBalancersRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param filters: loadBalancerType - 负载均衡类型，取值为：alb、nlb、dnlb，默认alb，支持单个
loadBalancerIds - 负载均衡ID列表，支持多个
loadBalancerNames - 负载均衡名称列表，支持多个
vpcId - 负载均衡所在Vpc的Id，支持单个
azType - 负载均衡az类型，取值：all(全部类型)，standard(标准负载均衡)，edge(边缘负载均衡)，默认standard ，支持单个
azs - 可用区，支持多个
columns - 不指定则默认导出基本表头："LB ID", "LB Name", "LB Type", "Region"
  可选字段值：
    az：lb所属可用区，对应表头"Availability Zone"
    privateIpAddress：lb的vip地址，对应表头"VIP"
    elasticIp：lb的公网IP，对应表头"EIP IPv4 Address"、"EIP IPv4 Bandwidth"
    ipv6Address：lb的ipv6地址，对应表头"IPv6 Address"
    vpc/subnet：lb所属的vpc及子网，对应表头"VPC ID"、"VPC Name"、"Subnet ID"、"Subnet Name"
    deleteProtection：是否开启删除保护，对应表头"Delete Protection"
    charge：lb的计费信息，对应表头"LB Billing Type"、"Creation Time"
    state：lb状态，对应表头"Status"
    tag：lb绑定的标签，对应表头"Tag"
    description：lb的描述信息，对应表头"Description"
(Optional) */
func (r *ExportLoadBalancersRequest) SetFilters(filters []common.Filter) {
    r.Filters = filters
}

/* param tags: Tag筛选条件(Optional) */
func (r *ExportLoadBalancersRequest) SetTags(tags []lb.TagFilter) {
    r.Tags = tags
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ExportLoadBalancersRequest) GetRegionId() string {
    return r.RegionId
}

type ExportLoadBalancersResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ExportLoadBalancersResult `json:"result"`
}

type ExportLoadBalancersResult struct {
    TaskId string `json:"taskId"`
}