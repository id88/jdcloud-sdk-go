// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type DomainTxtValidateRequest struct {

    core.JDCloudRequest

    /* 域名 (Optional) */
    Domain *string `json:"domain"`

    /* 校验类型，dns or file (Optional) */
    ValidateType *string `json:"validateType"`

    /* 主机记录,dns验证方式时必传.值为_cdnautover (Optional) */
    HostRecord *string `json:"hostRecord"`

    /* 主机记录值 (Optional) */
    Txt *string `json:"txt"`

    /* file验证方式时必传 (Optional) */
    Url *string `json:"url"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDomainTxtValidateRequest(
) *DomainTxtValidateRequest {

	return &DomainTxtValidateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/domainTxtValidate",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param domain: 域名 (Optional)
 * param validateType: 校验类型，dns or file (Optional)
 * param hostRecord: 主机记录,dns验证方式时必传.值为_cdnautover (Optional)
 * param txt: 主机记录值 (Optional)
 * param url: file验证方式时必传 (Optional)
 */
func NewDomainTxtValidateRequestWithAllParams(
    domain *string,
    validateType *string,
    hostRecord *string,
    txt *string,
    url *string,
) *DomainTxtValidateRequest {

    return &DomainTxtValidateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/domainTxtValidate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Domain: domain,
        ValidateType: validateType,
        HostRecord: hostRecord,
        Txt: txt,
        Url: url,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDomainTxtValidateRequestWithoutParam() *DomainTxtValidateRequest {

    return &DomainTxtValidateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/domainTxtValidate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param domain: 域名(Optional) */
func (r *DomainTxtValidateRequest) SetDomain(domain string) {
    r.Domain = &domain
}
/* param validateType: 校验类型，dns or file(Optional) */
func (r *DomainTxtValidateRequest) SetValidateType(validateType string) {
    r.ValidateType = &validateType
}
/* param hostRecord: 主机记录,dns验证方式时必传.值为_cdnautover(Optional) */
func (r *DomainTxtValidateRequest) SetHostRecord(hostRecord string) {
    r.HostRecord = &hostRecord
}
/* param txt: 主机记录值(Optional) */
func (r *DomainTxtValidateRequest) SetTxt(txt string) {
    r.Txt = &txt
}
/* param url: file验证方式时必传(Optional) */
func (r *DomainTxtValidateRequest) SetUrl(url string) {
    r.Url = &url
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DomainTxtValidateRequest) GetRegionId() string {
    return ""
}

type DomainTxtValidateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DomainTxtValidateResult `json:"result"`
}

type DomainTxtValidateResult struct {
    Pass bool `json:"pass"`
    ErrMsg string `json:"errMsg"`
}