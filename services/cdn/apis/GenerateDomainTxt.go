// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type GenerateDomainTxtRequest struct {

    core.JDCloudRequest

    /* 域名 (Optional) */
    Domain *string `json:"domain"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGenerateDomainTxtRequest(
) *GenerateDomainTxtRequest {

	return &GenerateDomainTxtRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/generateDomainTxt",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param domain: 域名 (Optional)
 */
func NewGenerateDomainTxtRequestWithAllParams(
    domain *string,
) *GenerateDomainTxtRequest {

    return &GenerateDomainTxtRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/generateDomainTxt",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Domain: domain,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGenerateDomainTxtRequestWithoutParam() *GenerateDomainTxtRequest {

    return &GenerateDomainTxtRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/generateDomainTxt",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param domain: 域名(Optional) */
func (r *GenerateDomainTxtRequest) SetDomain(domain string) {
    r.Domain = &domain
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GenerateDomainTxtRequest) GetRegionId() string {
    return ""
}

type GenerateDomainTxtResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GenerateDomainTxtResult `json:"result"`
}

type GenerateDomainTxtResult struct {
    Txt string `json:"txt"`
}