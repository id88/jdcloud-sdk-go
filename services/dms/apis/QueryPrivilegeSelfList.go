// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    dms "github.com/jdcloud-api/jdcloud-sdk-go/services/dms/models"
)

type QueryPrivilegeSelfListRequest struct {

    core.JDCloudRequest

    /* 实例ID (Optional) */
    InstanceId *string `json:"instanceId"`

    /* 实例名称 (Optional) */
    InstanceName *string `json:"instanceName"`

    /* 是否只显示生效中的授权信息 (Optional) */
    ShowNormal *bool `json:"showNormal"`

    /* 是否只显示释放的记录,true展示释放权限的记录 (Optional) */
    ReleaseStatus *bool `json:"releaseStatus"`

    /* 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 每页显示的数据条数，用于查询列表的接口。 (Optional) */
    PageSize *int `json:"pageSize"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryPrivilegeSelfListRequest(
) *QueryPrivilegeSelfListRequest {

	return &QueryPrivilegeSelfListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/management:queryPrivilegeSelfList",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param instanceId: 实例ID (Optional)
 * param instanceName: 实例名称 (Optional)
 * param showNormal: 是否只显示生效中的授权信息 (Optional)
 * param releaseStatus: 是否只显示释放的记录,true展示释放权限的记录 (Optional)
 * param pageNumber: 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。 (Optional)
 * param pageSize: 每页显示的数据条数，用于查询列表的接口。 (Optional)
 */
func NewQueryPrivilegeSelfListRequestWithAllParams(
    instanceId *string,
    instanceName *string,
    showNormal *bool,
    releaseStatus *bool,
    pageNumber *int,
    pageSize *int,
) *QueryPrivilegeSelfListRequest {

    return &QueryPrivilegeSelfListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/management:queryPrivilegeSelfList",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        InstanceId: instanceId,
        InstanceName: instanceName,
        ShowNormal: showNormal,
        ReleaseStatus: releaseStatus,
        PageNumber: pageNumber,
        PageSize: pageSize,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryPrivilegeSelfListRequestWithoutParam() *QueryPrivilegeSelfListRequest {

    return &QueryPrivilegeSelfListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/management:queryPrivilegeSelfList",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param instanceId: 实例ID(Optional) */
func (r *QueryPrivilegeSelfListRequest) SetInstanceId(instanceId string) {
    r.InstanceId = &instanceId
}
/* param instanceName: 实例名称(Optional) */
func (r *QueryPrivilegeSelfListRequest) SetInstanceName(instanceName string) {
    r.InstanceName = &instanceName
}
/* param showNormal: 是否只显示生效中的授权信息(Optional) */
func (r *QueryPrivilegeSelfListRequest) SetShowNormal(showNormal bool) {
    r.ShowNormal = &showNormal
}
/* param releaseStatus: 是否只显示释放的记录,true展示释放权限的记录(Optional) */
func (r *QueryPrivilegeSelfListRequest) SetReleaseStatus(releaseStatus bool) {
    r.ReleaseStatus = &releaseStatus
}
/* param pageNumber: 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。(Optional) */
func (r *QueryPrivilegeSelfListRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}
/* param pageSize: 每页显示的数据条数，用于查询列表的接口。(Optional) */
func (r *QueryPrivilegeSelfListRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryPrivilegeSelfListRequest) GetRegionId() string {
    return ""
}

type QueryPrivilegeSelfListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryPrivilegeSelfListResult `json:"result"`
}

type QueryPrivilegeSelfListResult struct {
    Count int `json:"count"`
    IsAdmin bool `json:"isAdmin"`
    DmsPrivilegeVOList []dms.DmsPrivilegeVO `json:"dmsPrivilegeVOList"`
}