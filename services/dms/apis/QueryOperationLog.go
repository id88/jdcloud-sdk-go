// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    dms "github.com/jdcloud-api/jdcloud-sdk-go/services/dms/models"
)

type QueryOperationLogRequest struct {

    core.JDCloudRequest

    /* 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)  */
    RegionId string `json:"regionId"`

    /* 操作类型 (Optional) */
    SupType *string `json:"supType"`

    /* 对应控制台功能 (Optional) */
    Type *string `json:"type"`

    /* 操作人 (Optional) */
    Pin *string `json:"pin"`

    /* 实例id (Optional) */
    InstanceId *string `json:"instanceId"`

    /* 数据库名称 (Optional) */
    DbName *string `json:"dbName"`

    /* 起始时间(UTC) (Optional) */
    StartTime *string `json:"startTime"`

    /* 结束时间(UTC) (Optional) */
    EndTime *string `json:"endTime"`

    /* 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 每页显示的数据条数，用于查询列表的接口。 (Optional) */
    PageSize *int `json:"pageSize"`
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md) (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryOperationLogRequest(
    regionId string,
) *QueryOperationLogRequest {

	return &QueryOperationLogRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/operationLog:query",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md) (Required)
 * param supType: 操作类型 (Optional)
 * param typeValue: 对应控制台功能 (Optional)
 * param pin: 操作人 (Optional)
 * param instanceId: 实例id (Optional)
 * param dbName: 数据库名称 (Optional)
 * param startTime: 起始时间(UTC) (Optional)
 * param endTime: 结束时间(UTC) (Optional)
 * param pageNumber: 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。 (Optional)
 * param pageSize: 每页显示的数据条数，用于查询列表的接口。 (Optional)
 */
func NewQueryOperationLogRequestWithAllParams(
    regionId string,
    supType *string,
    typeValue *string,
    pin *string,
    instanceId *string,
    dbName *string,
    startTime *string,
    endTime *string,
    pageNumber *int,
    pageSize *int,
) *QueryOperationLogRequest {

    return &QueryOperationLogRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/operationLog:query",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        SupType: supType,
        Type: typeValue,
        Pin: pin,
        InstanceId: instanceId,
        DbName: dbName,
        StartTime: startTime,
        EndTime: endTime,
        PageNumber: pageNumber,
        PageSize: pageSize,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryOperationLogRequestWithoutParam() *QueryOperationLogRequest {

    return &QueryOperationLogRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/operationLog:query",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)(Required) */
func (r *QueryOperationLogRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param supType: 操作类型(Optional) */
func (r *QueryOperationLogRequest) SetSupType(supType string) {
    r.SupType = &supType
}
/* param typeValue: 对应控制台功能(Optional) */
func (r *QueryOperationLogRequest) SetType(typeValue string) {
    r.Type = &typeValue
}
/* param pin: 操作人(Optional) */
func (r *QueryOperationLogRequest) SetPin(pin string) {
    r.Pin = &pin
}
/* param instanceId: 实例id(Optional) */
func (r *QueryOperationLogRequest) SetInstanceId(instanceId string) {
    r.InstanceId = &instanceId
}
/* param dbName: 数据库名称(Optional) */
func (r *QueryOperationLogRequest) SetDbName(dbName string) {
    r.DbName = &dbName
}
/* param startTime: 起始时间(UTC)(Optional) */
func (r *QueryOperationLogRequest) SetStartTime(startTime string) {
    r.StartTime = &startTime
}
/* param endTime: 结束时间(UTC)(Optional) */
func (r *QueryOperationLogRequest) SetEndTime(endTime string) {
    r.EndTime = &endTime
}
/* param pageNumber: 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。(Optional) */
func (r *QueryOperationLogRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}
/* param pageSize: 每页显示的数据条数，用于查询列表的接口。(Optional) */
func (r *QueryOperationLogRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryOperationLogRequest) GetRegionId() string {
    return r.RegionId
}

type QueryOperationLogResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryOperationLogResult `json:"result"`
}

type QueryOperationLogResult struct {
    Count int `json:"count"`
    OperationLogs []dms.DmsOperationLog `json:"operationLogs"`
}