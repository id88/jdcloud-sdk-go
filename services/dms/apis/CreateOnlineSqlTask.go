// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type CreateOnlineSqlTaskRequest struct {

    core.JDCloudRequest

    /* 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)  */
    RegionId string `json:"regionId"`

    /* 数据源id (Optional) */
    DataSourceId *int `json:"dataSourceId"`

    /* 数据库名称。 (Optional) */
    DbName *string `json:"dbName"`

    /* 计划开始执行时间，stardb数据源固定为空。 (Optional) */
    PlanTime *string `json:"planTime"`

    /* 执行SQL。 (Optional) */
    Sqls *string `json:"sqls"`

    /* 任务类型:DDL, DML (Optional) */
    TaskTypeEnum *string `json:"taskTypeEnum"`
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md) (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateOnlineSqlTaskRequest(
    regionId string,
) *CreateOnlineSqlTaskRequest {

	return &CreateOnlineSqlTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/sqltask:create",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md) (Required)
 * param dataSourceId: 数据源id (Optional)
 * param dbName: 数据库名称。 (Optional)
 * param planTime: 计划开始执行时间，stardb数据源固定为空。 (Optional)
 * param sqls: 执行SQL。 (Optional)
 * param taskTypeEnum: 任务类型:DDL, DML (Optional)
 */
func NewCreateOnlineSqlTaskRequestWithAllParams(
    regionId string,
    dataSourceId *int,
    dbName *string,
    planTime *string,
    sqls *string,
    taskTypeEnum *string,
) *CreateOnlineSqlTaskRequest {

    return &CreateOnlineSqlTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/sqltask:create",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        DataSourceId: dataSourceId,
        DbName: dbName,
        PlanTime: planTime,
        Sqls: sqls,
        TaskTypeEnum: taskTypeEnum,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateOnlineSqlTaskRequestWithoutParam() *CreateOnlineSqlTaskRequest {

    return &CreateOnlineSqlTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/sqltask:create",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)(Required) */
func (r *CreateOnlineSqlTaskRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param dataSourceId: 数据源id(Optional) */
func (r *CreateOnlineSqlTaskRequest) SetDataSourceId(dataSourceId int) {
    r.DataSourceId = &dataSourceId
}
/* param dbName: 数据库名称。(Optional) */
func (r *CreateOnlineSqlTaskRequest) SetDbName(dbName string) {
    r.DbName = &dbName
}
/* param planTime: 计划开始执行时间，stardb数据源固定为空。(Optional) */
func (r *CreateOnlineSqlTaskRequest) SetPlanTime(planTime string) {
    r.PlanTime = &planTime
}
/* param sqls: 执行SQL。(Optional) */
func (r *CreateOnlineSqlTaskRequest) SetSqls(sqls string) {
    r.Sqls = &sqls
}
/* param taskTypeEnum: 任务类型:DDL, DML(Optional) */
func (r *CreateOnlineSqlTaskRequest) SetTaskTypeEnum(taskTypeEnum string) {
    r.TaskTypeEnum = &taskTypeEnum
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateOnlineSqlTaskRequest) GetRegionId() string {
    return r.RegionId
}

type CreateOnlineSqlTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateOnlineSqlTaskResult `json:"result"`
}

type CreateOnlineSqlTaskResult struct {
    IntResult int `json:"intResult"`
}