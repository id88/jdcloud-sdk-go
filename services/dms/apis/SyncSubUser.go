// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    dms "github.com/jdcloud-api/jdcloud-sdk-go/services/dms/models"
)

type SyncSubUserRequest struct {

    core.JDCloudRequest

    /* 同步的子账号的列表信息 (Optional) */
    DmsSyncSubUserVOList []dms.DmsSyncSubUserVO `json:"dmsSyncSubUserVOList"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSyncSubUserRequest(
) *SyncSubUserRequest {

	return &SyncSubUserRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/management:syncSubUser",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param dmsSyncSubUserVOList: 同步的子账号的列表信息 (Optional)
 */
func NewSyncSubUserRequestWithAllParams(
    dmsSyncSubUserVOList []dms.DmsSyncSubUserVO,
) *SyncSubUserRequest {

    return &SyncSubUserRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/management:syncSubUser",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        DmsSyncSubUserVOList: dmsSyncSubUserVOList,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSyncSubUserRequestWithoutParam() *SyncSubUserRequest {

    return &SyncSubUserRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/management:syncSubUser",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param dmsSyncSubUserVOList: 同步的子账号的列表信息(Optional) */
func (r *SyncSubUserRequest) SetDmsSyncSubUserVOList(dmsSyncSubUserVOList []dms.DmsSyncSubUserVO) {
    r.DmsSyncSubUserVOList = dmsSyncSubUserVOList
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SyncSubUserRequest) GetRegionId() string {
    return ""
}

type SyncSubUserResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SyncSubUserResult `json:"result"`
}

type SyncSubUserResult struct {
}