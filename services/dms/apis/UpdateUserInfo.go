// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type UpdateUserInfoRequest struct {

    core.JDCloudRequest

    /* 被更新用户的pin信息 (Optional) */
    Pin *string `json:"pin"`

    /* 用户手机号码 (Optional) */
    Phone *string `json:"phone"`

    /* 用户邮箱 (Optional) */
    Email *string `json:"email"`

    /* 用户角色列表信息 (Optional) */
    RoleList []string `json:"roleList"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateUserInfoRequest(
) *UpdateUserInfoRequest {

	return &UpdateUserInfoRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/management:updateUserInfo",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param pin: 被更新用户的pin信息 (Optional)
 * param phone: 用户手机号码 (Optional)
 * param email: 用户邮箱 (Optional)
 * param roleList: 用户角色列表信息 (Optional)
 */
func NewUpdateUserInfoRequestWithAllParams(
    pin *string,
    phone *string,
    email *string,
    roleList []string,
) *UpdateUserInfoRequest {

    return &UpdateUserInfoRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/management:updateUserInfo",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Pin: pin,
        Phone: phone,
        Email: email,
        RoleList: roleList,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateUserInfoRequestWithoutParam() *UpdateUserInfoRequest {

    return &UpdateUserInfoRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/management:updateUserInfo",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param pin: 被更新用户的pin信息(Optional) */
func (r *UpdateUserInfoRequest) SetPin(pin string) {
    r.Pin = &pin
}
/* param phone: 用户手机号码(Optional) */
func (r *UpdateUserInfoRequest) SetPhone(phone string) {
    r.Phone = &phone
}
/* param email: 用户邮箱(Optional) */
func (r *UpdateUserInfoRequest) SetEmail(email string) {
    r.Email = &email
}
/* param roleList: 用户角色列表信息(Optional) */
func (r *UpdateUserInfoRequest) SetRoleList(roleList []string) {
    r.RoleList = roleList
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateUserInfoRequest) GetRegionId() string {
    return ""
}

type UpdateUserInfoResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateUserInfoResult `json:"result"`
}

type UpdateUserInfoResult struct {
}