// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    dms "github.com/jdcloud-api/jdcloud-sdk-go/services/dms/models"
)

type GeneralAlterProcedureRequest struct {

    core.JDCloudRequest

    /* 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)  */
    RegionId string `json:"regionId"`

    /* 数据源id (Optional) */
    DataSourceId *int `json:"dataSourceId"`

    /* 数据库名称。 (Optional) */
    DbName *string `json:"dbName"`

    /* 原存储过程名称。 (Optional) */
    OriginProcedureName *string `json:"originProcedureName"`

    /* 存储过程名称。 (Optional) */
    ProcedureName *string `json:"procedureName"`

    /* 定义者。 (Optional) */
    Definer *string `json:"definer"`

    /* 安全性，DEFAULT("DEFAULT", 1),DEFINER("DEFINER", 2), INVOKER("INVOKER", 3); (Optional) */
    ProcedureSecurity *string `json:"procedureSecurity"`

    /* 数据访问，DEFAULT("DEFAULT", 1),NO_SQL("NO_SQL", 2), CONTAINS_SQL("CONTAINS_SQL", 3), READS_SQL_DATA("READS_SQL_DATA", 4), MODIFIES_SQL_DATA("MODIFIES_SQL_DATA", 5); (Optional) */
    DataAccess *string `json:"dataAccess"`

    /* 确定性。 (Optional) */
    Deterministic *bool `json:"deterministic"`

    /* 存储过程定义SQL。 (Optional) */
    DefinitionSql *string `json:"definitionSql"`

    /* 创建存储过程定义完整SQL。 (Optional) */
    CompleteSql *string `json:"completeSql"`

    /* 参数列表。 (Optional) */
    Parameters []dms.Parameter `json:"parameters"`

    /* 注释 (Optional) */
    Comment *string `json:"comment"`
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md) (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGeneralAlterProcedureRequest(
    regionId string,
) *GeneralAlterProcedureRequest {

	return &GeneralAlterProcedureRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/procedure:generalAlter",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md) (Required)
 * param dataSourceId: 数据源id (Optional)
 * param dbName: 数据库名称。 (Optional)
 * param originProcedureName: 原存储过程名称。 (Optional)
 * param procedureName: 存储过程名称。 (Optional)
 * param definer: 定义者。 (Optional)
 * param procedureSecurity: 安全性，DEFAULT("DEFAULT", 1),DEFINER("DEFINER", 2), INVOKER("INVOKER", 3); (Optional)
 * param dataAccess: 数据访问，DEFAULT("DEFAULT", 1),NO_SQL("NO_SQL", 2), CONTAINS_SQL("CONTAINS_SQL", 3), READS_SQL_DATA("READS_SQL_DATA", 4), MODIFIES_SQL_DATA("MODIFIES_SQL_DATA", 5); (Optional)
 * param deterministic: 确定性。 (Optional)
 * param definitionSql: 存储过程定义SQL。 (Optional)
 * param completeSql: 创建存储过程定义完整SQL。 (Optional)
 * param parameters: 参数列表。 (Optional)
 * param comment: 注释 (Optional)
 */
func NewGeneralAlterProcedureRequestWithAllParams(
    regionId string,
    dataSourceId *int,
    dbName *string,
    originProcedureName *string,
    procedureName *string,
    definer *string,
    procedureSecurity *string,
    dataAccess *string,
    deterministic *bool,
    definitionSql *string,
    completeSql *string,
    parameters []dms.Parameter,
    comment *string,
) *GeneralAlterProcedureRequest {

    return &GeneralAlterProcedureRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/procedure:generalAlter",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        DataSourceId: dataSourceId,
        DbName: dbName,
        OriginProcedureName: originProcedureName,
        ProcedureName: procedureName,
        Definer: definer,
        ProcedureSecurity: procedureSecurity,
        DataAccess: dataAccess,
        Deterministic: deterministic,
        DefinitionSql: definitionSql,
        CompleteSql: completeSql,
        Parameters: parameters,
        Comment: comment,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGeneralAlterProcedureRequestWithoutParam() *GeneralAlterProcedureRequest {

    return &GeneralAlterProcedureRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/procedure:generalAlter",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)(Required) */
func (r *GeneralAlterProcedureRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param dataSourceId: 数据源id(Optional) */
func (r *GeneralAlterProcedureRequest) SetDataSourceId(dataSourceId int) {
    r.DataSourceId = &dataSourceId
}
/* param dbName: 数据库名称。(Optional) */
func (r *GeneralAlterProcedureRequest) SetDbName(dbName string) {
    r.DbName = &dbName
}
/* param originProcedureName: 原存储过程名称。(Optional) */
func (r *GeneralAlterProcedureRequest) SetOriginProcedureName(originProcedureName string) {
    r.OriginProcedureName = &originProcedureName
}
/* param procedureName: 存储过程名称。(Optional) */
func (r *GeneralAlterProcedureRequest) SetProcedureName(procedureName string) {
    r.ProcedureName = &procedureName
}
/* param definer: 定义者。(Optional) */
func (r *GeneralAlterProcedureRequest) SetDefiner(definer string) {
    r.Definer = &definer
}
/* param procedureSecurity: 安全性，DEFAULT("DEFAULT", 1),DEFINER("DEFINER", 2), INVOKER("INVOKER", 3);(Optional) */
func (r *GeneralAlterProcedureRequest) SetProcedureSecurity(procedureSecurity string) {
    r.ProcedureSecurity = &procedureSecurity
}
/* param dataAccess: 数据访问，DEFAULT("DEFAULT", 1),NO_SQL("NO_SQL", 2), CONTAINS_SQL("CONTAINS_SQL", 3), READS_SQL_DATA("READS_SQL_DATA", 4), MODIFIES_SQL_DATA("MODIFIES_SQL_DATA", 5);(Optional) */
func (r *GeneralAlterProcedureRequest) SetDataAccess(dataAccess string) {
    r.DataAccess = &dataAccess
}
/* param deterministic: 确定性。(Optional) */
func (r *GeneralAlterProcedureRequest) SetDeterministic(deterministic bool) {
    r.Deterministic = &deterministic
}
/* param definitionSql: 存储过程定义SQL。(Optional) */
func (r *GeneralAlterProcedureRequest) SetDefinitionSql(definitionSql string) {
    r.DefinitionSql = &definitionSql
}
/* param completeSql: 创建存储过程定义完整SQL。(Optional) */
func (r *GeneralAlterProcedureRequest) SetCompleteSql(completeSql string) {
    r.CompleteSql = &completeSql
}
/* param parameters: 参数列表。(Optional) */
func (r *GeneralAlterProcedureRequest) SetParameters(parameters []dms.Parameter) {
    r.Parameters = parameters
}
/* param comment: 注释(Optional) */
func (r *GeneralAlterProcedureRequest) SetComment(comment string) {
    r.Comment = &comment
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GeneralAlterProcedureRequest) GetRegionId() string {
    return r.RegionId
}

type GeneralAlterProcedureResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GeneralAlterProcedureResult `json:"result"`
}

type GeneralAlterProcedureResult struct {
    DmsSqls []dms.DmsSql `json:"dmsSqls"`
}