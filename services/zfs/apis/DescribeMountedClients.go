// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type DescribeMountedClientsRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 页码, 默认为1, 取值范围：[1,∞) (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 分页大小，默认为10，取值范围：[10,100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* 文件系统ID  */
    FileSystemId string `json:"fileSystemId"`

    /* 挂载目标ID (Optional) */
    MountTargetId *string `json:"mountTargetId"`

    /* 查询客户端IP数组 (Optional) */
    ClientIP []string `json:"clientIP"`
}

/*
 * param regionId: 地域ID (Required)
 * param fileSystemId: 文件系统ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeMountedClientsRequest(
    regionId string,
    fileSystemId string,
) *DescribeMountedClientsRequest {

	return &DescribeMountedClientsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/describeMountedClients",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        FileSystemId: fileSystemId,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param pageNumber: 页码, 默认为1, 取值范围：[1,∞) (Optional)
 * param pageSize: 分页大小，默认为10，取值范围：[10,100] (Optional)
 * param fileSystemId: 文件系统ID (Required)
 * param mountTargetId: 挂载目标ID (Optional)
 * param clientIP: 查询客户端IP数组 (Optional)
 */
func NewDescribeMountedClientsRequestWithAllParams(
    regionId string,
    pageNumber *int,
    pageSize *int,
    fileSystemId string,
    mountTargetId *string,
    clientIP []string,
) *DescribeMountedClientsRequest {

    return &DescribeMountedClientsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/describeMountedClients",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        PageNumber: pageNumber,
        PageSize: pageSize,
        FileSystemId: fileSystemId,
        MountTargetId: mountTargetId,
        ClientIP: clientIP,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeMountedClientsRequestWithoutParam() *DescribeMountedClientsRequest {

    return &DescribeMountedClientsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/describeMountedClients",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *DescribeMountedClientsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param pageNumber: 页码, 默认为1, 取值范围：[1,∞)(Optional) */
func (r *DescribeMountedClientsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}
/* param pageSize: 分页大小，默认为10，取值范围：[10,100](Optional) */
func (r *DescribeMountedClientsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}
/* param fileSystemId: 文件系统ID(Required) */
func (r *DescribeMountedClientsRequest) SetFileSystemId(fileSystemId string) {
    r.FileSystemId = fileSystemId
}
/* param mountTargetId: 挂载目标ID(Optional) */
func (r *DescribeMountedClientsRequest) SetMountTargetId(mountTargetId string) {
    r.MountTargetId = &mountTargetId
}
/* param clientIP: 查询客户端IP数组(Optional) */
func (r *DescribeMountedClientsRequest) SetClientIP(clientIP []string) {
    r.ClientIP = clientIP
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeMountedClientsRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeMountedClientsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeMountedClientsResult `json:"result"`
}

type DescribeMountedClientsResult struct {
    ClientsIPs []string `json:"clientsIPs"`
    TotalCount int `json:"totalCount"`
}