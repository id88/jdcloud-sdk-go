// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    assistant "github.com/jdcloud-api/jdcloud-sdk-go/services/assistant/models"
)

type DescribeInvocationsRequest struct {

    core.JDCloudRequest

    /* 地域ID。  */
    RegionId string `json:"regionId"`

    /* 页数，默认是第一页，取值1
 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 每页大小，默认20, 最大100
 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 命令执行Id
 (Optional) */
    InvokeIds []string `json:"invokeIds"`

    /* 命令Id
 (Optional) */
    CommandIds []string `json:"commandIds"`

    /* 命令执行状态
 (Optional) */
    Status []string `json:"status"`

    /* 命令名字
 (Optional) */
    CommandNames []string `json:"commandNames"`

    /* 命令类型， shell or powershell
 (Optional) */
    CommandTypes []string `json:"commandTypes"`

    /* 命令执行用户
 (Optional) */
    UserNames []string `json:"userNames"`
}

/*
 * param regionId: 地域ID。 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeInvocationsRequest(
    regionId string,
) *DescribeInvocationsRequest {

	return &DescribeInvocationsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/describeInvocations",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域ID。 (Required)
 * param pageNumber: 页数，默认是第一页，取值1
 (Optional)
 * param pageSize: 每页大小，默认20, 最大100
 (Optional)
 * param invokeIds: 命令执行Id
 (Optional)
 * param commandIds: 命令Id
 (Optional)
 * param status: 命令执行状态
 (Optional)
 * param commandNames: 命令名字
 (Optional)
 * param commandTypes: 命令类型， shell or powershell
 (Optional)
 * param userNames: 命令执行用户
 (Optional)
 */
func NewDescribeInvocationsRequestWithAllParams(
    regionId string,
    pageNumber *int,
    pageSize *int,
    invokeIds []string,
    commandIds []string,
    status []string,
    commandNames []string,
    commandTypes []string,
    userNames []string,
) *DescribeInvocationsRequest {

    return &DescribeInvocationsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/describeInvocations",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        PageNumber: pageNumber,
        PageSize: pageSize,
        InvokeIds: invokeIds,
        CommandIds: commandIds,
        Status: status,
        CommandNames: commandNames,
        CommandTypes: commandTypes,
        UserNames: userNames,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeInvocationsRequestWithoutParam() *DescribeInvocationsRequest {

    return &DescribeInvocationsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/describeInvocations",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID。(Required) */
func (r *DescribeInvocationsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param pageNumber: 页数，默认是第一页，取值1
(Optional) */
func (r *DescribeInvocationsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}
/* param pageSize: 每页大小，默认20, 最大100
(Optional) */
func (r *DescribeInvocationsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}
/* param invokeIds: 命令执行Id
(Optional) */
func (r *DescribeInvocationsRequest) SetInvokeIds(invokeIds []string) {
    r.InvokeIds = invokeIds
}
/* param commandIds: 命令Id
(Optional) */
func (r *DescribeInvocationsRequest) SetCommandIds(commandIds []string) {
    r.CommandIds = commandIds
}
/* param status: 命令执行状态
(Optional) */
func (r *DescribeInvocationsRequest) SetStatus(status []string) {
    r.Status = status
}
/* param commandNames: 命令名字
(Optional) */
func (r *DescribeInvocationsRequest) SetCommandNames(commandNames []string) {
    r.CommandNames = commandNames
}
/* param commandTypes: 命令类型， shell or powershell
(Optional) */
func (r *DescribeInvocationsRequest) SetCommandTypes(commandTypes []string) {
    r.CommandTypes = commandTypes
}
/* param userNames: 命令执行用户
(Optional) */
func (r *DescribeInvocationsRequest) SetUserNames(userNames []string) {
    r.UserNames = userNames
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeInvocationsRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeInvocationsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeInvocationsResult `json:"result"`
}

type DescribeInvocationsResult struct {
    TotalCount int `json:"totalCount"`
    Invocations []assistant.Invocation `json:"invocations"`
}