// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    dts "github.com/jdcloud-api/jdcloud-sdk-go/services/dts/models"
)

type ListInstanceClassesRequest struct {

    core.JDCloudRequest

    /* 地域代码，取值范围参见[《各地域及可用区对照表》]  */
    RegionId string `json:"regionId"`

    /* 传输任务类型：Migration（迁移）、Sync（同步）、Subscribe（订阅）、DisasterRecovery（灾备） (Optional) */
    TransmissionMethod *string `json:"transmissionMethod"`
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》] (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewListInstanceClassesRequest(
    regionId string,
) *ListInstanceClassesRequest {

	return &ListInstanceClassesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instanceclass",
			Method:  "GET",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》] (Required)
 * param transmissionMethod: 传输任务类型：Migration（迁移）、Sync（同步）、Subscribe（订阅）、DisasterRecovery（灾备） (Optional)
 */
func NewListInstanceClassesRequestWithAllParams(
    regionId string,
    transmissionMethod *string,
) *ListInstanceClassesRequest {

    return &ListInstanceClassesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instanceclass",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        TransmissionMethod: transmissionMethod,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewListInstanceClassesRequestWithoutParam() *ListInstanceClassesRequest {

    return &ListInstanceClassesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instanceclass",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](Required) */
func (r *ListInstanceClassesRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param transmissionMethod: 传输任务类型：Migration（迁移）、Sync（同步）、Subscribe（订阅）、DisasterRecovery（灾备）(Optional) */
func (r *ListInstanceClassesRequest) SetTransmissionMethod(transmissionMethod string) {
    r.TransmissionMethod = &transmissionMethod
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ListInstanceClassesRequest) GetRegionId() string {
    return r.RegionId
}

type ListInstanceClassesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ListInstanceClassesResult `json:"result"`
}

type ListInstanceClassesResult struct {
    InstanceClass []dts.InstanceClass `json:"instanceClass"`
}