// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type BatchOperateTasksRequest struct {

    core.JDCloudRequest

    /* 地域代码，取值范围参见[《各地域及可用区对照表》]  */
    RegionId string `json:"regionId"`

    /* 操作类型：start - 启动任务，stop - 停止任务，delete - 删除任务，resume - 恢复任务，suspend - 暂停任务 (Optional) */
    OperateType *string `json:"operateType"`

    /* 任务ID列表 (Optional) */
    Ids []string `json:"ids"`
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》] (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewBatchOperateTasksRequest(
    regionId string,
) *BatchOperateTasksRequest {

	return &BatchOperateTasksRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/dtsbatch",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》] (Required)
 * param operateType: 操作类型：start - 启动任务，stop - 停止任务，delete - 删除任务，resume - 恢复任务，suspend - 暂停任务 (Optional)
 * param ids: 任务ID列表 (Optional)
 */
func NewBatchOperateTasksRequestWithAllParams(
    regionId string,
    operateType *string,
    ids []string,
) *BatchOperateTasksRequest {

    return &BatchOperateTasksRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/dtsbatch",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        OperateType: operateType,
        Ids: ids,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewBatchOperateTasksRequestWithoutParam() *BatchOperateTasksRequest {

    return &BatchOperateTasksRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/dtsbatch",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](Required) */
func (r *BatchOperateTasksRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param operateType: 操作类型：start - 启动任务，stop - 停止任务，delete - 删除任务，resume - 恢复任务，suspend - 暂停任务(Optional) */
func (r *BatchOperateTasksRequest) SetOperateType(operateType string) {
    r.OperateType = &operateType
}
/* param ids: 任务ID列表(Optional) */
func (r *BatchOperateTasksRequest) SetIds(ids []string) {
    r.Ids = ids
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r BatchOperateTasksRequest) GetRegionId() string {
    return r.RegionId
}

type BatchOperateTasksResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result BatchOperateTasksResult `json:"result"`
}

type BatchOperateTasksResult struct {
    Details []interface{} `json:"details"`
    OrderId string `json:"orderId"`
}