// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    cloudsign "github.com/jdcloud-api/jdcloud-sdk-go/services/cloudsign/models"
)

type GetMultiEvidenceRequest struct {

    core.JDCloudRequest

    /* 业务流水号 (Optional) */
    BusinessId *string `json:"businessId"`

    /* 存证编号 (Optional) */
    EvidenceId *string `json:"evidenceId"`

    /* 申请取证主体的ID类型 (Optional) */
    ApplicantIdType *string `json:"applicantIdType"`

    /* 申请取证主体的ID (Optional) */
    ApplicantIdNum *string `json:"applicantIdNum"`

    /* 请求流水号 (Optional) */
    MessageId *string `json:"messageId"`

    /* 业务类型 (Optional) */
    EvidenceType *string `json:"evidenceType"`

    /* 请求时间 (Optional) */
    MessageDate *string `json:"messageDate"`

    /* 存证时的请求流水 (Optional) */
    EvidenceMessageId *string `json:"evidenceMessageId"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetMultiEvidenceRequest(
) *GetMultiEvidenceRequest {

	return &GetMultiEvidenceRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/evidence:evidenceGetmulti",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param businessId: 业务流水号 (Optional)
 * param evidenceId: 存证编号 (Optional)
 * param applicantIdType: 申请取证主体的ID类型 (Optional)
 * param applicantIdNum: 申请取证主体的ID (Optional)
 * param messageId: 请求流水号 (Optional)
 * param evidenceType: 业务类型 (Optional)
 * param messageDate: 请求时间 (Optional)
 * param evidenceMessageId: 存证时的请求流水 (Optional)
 */
func NewGetMultiEvidenceRequestWithAllParams(
    businessId *string,
    evidenceId *string,
    applicantIdType *string,
    applicantIdNum *string,
    messageId *string,
    evidenceType *string,
    messageDate *string,
    evidenceMessageId *string,
) *GetMultiEvidenceRequest {

    return &GetMultiEvidenceRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/evidence:evidenceGetmulti",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        BusinessId: businessId,
        EvidenceId: evidenceId,
        ApplicantIdType: applicantIdType,
        ApplicantIdNum: applicantIdNum,
        MessageId: messageId,
        EvidenceType: evidenceType,
        MessageDate: messageDate,
        EvidenceMessageId: evidenceMessageId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetMultiEvidenceRequestWithoutParam() *GetMultiEvidenceRequest {

    return &GetMultiEvidenceRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/evidence:evidenceGetmulti",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param businessId: 业务流水号(Optional) */
func (r *GetMultiEvidenceRequest) SetBusinessId(businessId string) {
    r.BusinessId = &businessId
}
/* param evidenceId: 存证编号(Optional) */
func (r *GetMultiEvidenceRequest) SetEvidenceId(evidenceId string) {
    r.EvidenceId = &evidenceId
}
/* param applicantIdType: 申请取证主体的ID类型(Optional) */
func (r *GetMultiEvidenceRequest) SetApplicantIdType(applicantIdType string) {
    r.ApplicantIdType = &applicantIdType
}
/* param applicantIdNum: 申请取证主体的ID(Optional) */
func (r *GetMultiEvidenceRequest) SetApplicantIdNum(applicantIdNum string) {
    r.ApplicantIdNum = &applicantIdNum
}
/* param messageId: 请求流水号(Optional) */
func (r *GetMultiEvidenceRequest) SetMessageId(messageId string) {
    r.MessageId = &messageId
}
/* param evidenceType: 业务类型(Optional) */
func (r *GetMultiEvidenceRequest) SetEvidenceType(evidenceType string) {
    r.EvidenceType = &evidenceType
}
/* param messageDate: 请求时间(Optional) */
func (r *GetMultiEvidenceRequest) SetMessageDate(messageDate string) {
    r.MessageDate = &messageDate
}
/* param evidenceMessageId: 存证时的请求流水(Optional) */
func (r *GetMultiEvidenceRequest) SetEvidenceMessageId(evidenceMessageId string) {
    r.EvidenceMessageId = &evidenceMessageId
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetMultiEvidenceRequest) GetRegionId() string {
    return ""
}

type GetMultiEvidenceResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetMultiEvidenceResult `json:"result"`
}

type GetMultiEvidenceResult struct {
    Code string `json:"code"`
    Message string `json:"message"`
    Success bool `json:"success"`
    Data cloudsign.GetEvidenceResp `json:"data"`
}